#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TICKETS 10
#define TOTAL_SEATS 120
#define ROWS 10
#define COLS 12

int seats[TOTAL_SEATS] = {0};  // 0 = Available, 1 = Booked

typedef struct {
    char name[50];
    char duration[10];
    float rating;
} Movie;

typedef struct {
    char name[50];
    Movie movies[5];
} Theatre;

typedef struct {
    char theatre[50];
    char movie[50];
    char duration[10];
    char hall[10];
    char time[10];
    char seatType[10];
    int ticketQty;
    int seatNumbers[MAX_TICKETS];
    float totalAmount;
} Ticket;

void welcomeMessage();
void login();
void displayTheatres(Theatre theatres[], int size);
int selectTheatre(Theatre theatres[], int size);
void displayMovies(Movie movies[], int size);
int selectMovie();
void selectHall(char hall[]);
void selectTime(char time[]);
void selectTicketType(char seatType[], float *fare);
int selectTicketQuantity();
void selectSeats(int seatNumbers[], int quantity);
void processPayment(float amount);
void displayTicket(Ticket ticket);
void runTheatreBooking();

int main() {
    Theatre theatres[6] = {
        {"Bashundhara Cineplex", {{"Inception", "2h 28m", 8.8}, {"Dangal", "2h 49m", 8.4}, {"The Dark Knight", "2h 32m", 9.0}, {"3 Idiots", "2h 51m", 8.4}, {"Titanic", "3h 14m", 7.9}}},
        {"Uttara Cineplex", {{"Interstellar", "2h 49m", 8.6}, {"Sholay", "3h 24m", 8.2}, {"Avengers: Endgame", "3h 2m", 8.4}, {"Lagaan", "3h 44m", 8.1}, {"The Shawshank Redemption", "2h 22m", 9.3}}},
        {"Jamuna Future Cineplex", {{"Gladiator", "2h 35m", 8.5}, {"Gully Boy", "2h 34m", 8.0}, {"The Godfather", "2h 55m", 9.2}, {"Zindagi Na Milegi Dobara", "2h 34m", 8.1}, {"The Matrix", "2h 16m", 8.7}}},
        {"Shyamoli Mall Cineplex", {{"Joker", "2h 2m", 8.4}, {"Kabir Singh", "2h 52m", 7.1}, {"Fight Club", "2h 19m", 8.8}, {"Bajirao Mastani", "2h 38m", 7.9}, {"Forrest Gump", "2h 22m", 8.8}}},
        {"Savar Cineplex", {{"The Wolf of Wall Street", "3h", 8.2}, {"Padmaavat", "2h 44m", 7.0}, {"Pulp Fiction", "2h 34m", 8.9}, {"Barfi!", "2h 31m", 8.1}, {"The Revenant", "2h 36m", 8.0}}},
        {"Purbachal Cine Park", {{"The Lion King", "1h 58m", 8.5}, {"Andhadhun", "2h 19m", 8.3}, {"Schindler's List", "3h 15m", 9.0}, {"Swades", "3h 9m", 8.2}, {"The Prestige", "2h 10m", 8.5}}}
    };

    welcomeMessage();

    login();

    int theatreIndex = selectTheatre(theatres, 6);
    printf("\nYou selected: %s\n", theatres[theatreIndex].name);

    displayMovies(theatres[theatreIndex].movies, 5);
    int movieIndex = selectMovie();
    printf("\nYou selected: %s (Duration: %s)\n", theatres[theatreIndex].movies[movieIndex].name, theatres[theatreIndex].movies[movieIndex].duration);

    Ticket ticket;
    strcpy(ticket.theatre, theatres[theatreIndex].name);
    strcpy(ticket.movie, theatres[theatreIndex].movies[movieIndex].name);
    strcpy(ticket.duration, theatres[theatreIndex].movies[movieIndex].duration);

    selectHall(ticket.hall);
    selectTime(ticket.time);
    selectTicketType(ticket.seatType, &ticket.totalAmount);

    ticket.ticketQty = selectTicketQuantity();
    runTheatreBooking();

    ticket.totalAmount *= ticket.ticketQty;
    printf("\nTotal Amount: %.2f Tk\n", ticket.totalAmount);

    processPayment(ticket.totalAmount);
    displayTicket(ticket);

    printf("\nEnjoy the Movie!\n");
    return 0;
}

void welcomeMessage() {
    printf("\n**********************************************\n");
    printf("*********** Welcome to BLOCKBUSTER ***********\n");
    printf("*************     CINEPLEX     ***************\n");
    printf("**********************************************\n");
    printf("\n");
}

void login() {
    char username[20], password[20];
    printf("Login\n");
    printf("Enter Username: ");
    scanf("%s", username);
    printf("Enter Password: ");
    scanf("%s", password);
    printf("Login successful!\n");
}

void displayTheatres(Theatre theatres[], int size) {
    printf("\nAvailable Theatres:\n");
    for (int i = 0; i < size; i++) {
        printf("%d. %s\n", i + 1, theatres[i].name);
    }
}

int selectTheatre(Theatre theatres[], int size) {
    int choice;
    displayTheatres(theatres, size);
    printf("Select a theatre (1-6): ");
    scanf("%d", &choice);
    return choice - 1;
}

void displayMovies(Movie movies[], int size) {
    printf("\nAvailable Movies:\n");
    for (int i = 0; i < size; i++) {
        printf("%d. %s (Rating: %.1f)\n", i + 1, movies[i].name, movies[i].rating);
    }
}

int selectMovie() {
    int choice;
    printf("Select a movie (1-5): ");
    scanf("%d", &choice);
    return choice - 1;
}

void selectHall(char hall[]) {
    printf("\nSelect Hall:\n1. Hall-1\n2. Hall-2\n3. Hall-3\nEnter Hall (1-3): ");
    int choice;
    scanf("%d", &choice);
    if (choice == 1) strcpy(hall, "Hall-1");
    else if (choice == 2) strcpy(hall, "Hall-2");
    else if (choice == 3) strcpy(hall, "Hall-3");
    else {
        printf("Invalid choice. Defaulting to Hall-1.\n");
        strcpy(hall, "Hall-1");
    }
}

void selectTime(char time[]) {
    printf("\nAvailable Showtimes:\n1. 11:20 AM\n2. 4:30 PM\n3. 8:30 PM\nSelect Time (1-3): ");
    int choice;
    scanf("%d", &choice);
    if (choice == 1) strcpy(time, "11:20 AM");
    else if (choice == 2) strcpy(time, "4:30 PM");
    else strcpy(time, "8:30 PM");
}

void selectTicketType(char seatType[], float *fare) {
    printf("\nTicket Type:\n1. VIP - 600 Tk\n2. Premium - 500 Tk\n3. Regular - 450 Tk\nSelect Type (1-3): ");
    int choice;
    scanf("%d", &choice);
    if (choice == 1) { strcpy(seatType, "VIP"); *fare = 600; }
    else if (choice == 2) { strcpy(seatType, "Premium"); *fare = 500; }
    else { strcpy(seatType, "Regular"); *fare = 450; }
}

int selectTicketQuantity() {
    int qty;
    do {
        printf("\nEnter Ticket Quantity (Max 10): ");
        scanf("%d", &qty);
    } while (qty < 1 || qty > 10);
    return qty;
}

// Function to display seat pattern with seat numbers
void displaySeats() {
    printf("\n   SCREEN THIS WAY\n\n");
    
    for (int i = 0; i < ROWS; i++) {
        printf("Row %2d: ", i + 1);
        for (int j = 0; j < COLS; j++) {
            int seatIndex = i * COLS + j;
            if (seats[seatIndex] == 0) {
                printf("%3d ", seatIndex + 1);  // Show seat number if available
            } else {
                printf(" X  ");  // Show 'X' for booked seats
            }
        }
        printf("\n");
    }
}

// Function to book a seat
void bookSeat(int seatNumber) {
    if (seatNumber < 1 || seatNumber > TOTAL_SEATS) {
        printf("Invalid seat number! Choose between 1 and %d.\n", TOTAL_SEATS);
        return;
    }
    if (seats[seatNumber - 1] == 1) {
        printf("Seat %d is already booked! Choose another seat.\n", seatNumber);
    } else {
        seats[seatNumber - 1] = 1;  // Mark seat as booked
        printf("Seat %d successfully booked!\n", seatNumber);
    }
}

// Function to start booking process
void startBooking() {
    int seatNumber;
    
    while (1) {
        displaySeats();
        
        printf("\nEnter seat number to book (1-120) or 0 to exit: ");
        scanf("%d", &seatNumber);
        
        if (seatNumber == 0) {
            printf("Thank you for booking!\n");
            return;
        }
        
        bookSeat(seatNumber);
    }
}

// Entry function to call everything
void runTheatreBooking() {
    startBooking();
}

void processPayment(float amount) {
    printf("\nSelect Payment Method:\n1. Card\n2. Mobile Banking\nSelect Payment Method (1-2): ");
    int paymentMethod;
    scanf("%d", &paymentMethod);

    if (paymentMethod == 1) {
        printf("\nCard Payment\n");
        printf("Enter Card Type (Visa/MasterCard): ");
        char cardType[20];
        scanf("%s", cardType);
        printf("Enter Card Number: ");
        char cardNumber[20];
        scanf("%s", cardNumber);
        printf("Enter MM/YY: ");
        char expiryDate[6];
        scanf("%s", expiryDate);
        printf("Enter CVC/CVV: ");
        char cvc[4];
        scanf("%s", cvc);
        printf("Enter Cardholder Name: ");
        char cardholder[50];
        scanf(" %[^\n]s", cardholder);

        printf("\nCard Payment Successful!\nAmount Paid: %.2f Tk\n", amount);
    } else if (paymentMethod == 2) {
        printf("\nMobile Banking\nSelect Mobile Bank:\n1. Bkash\n2. Nagad\n3. Rocket\n4. Upay\nSelect (1-4): ");
        int bankChoice;
        scanf("%d", &bankChoice);

        char bankName[20];
        if (bankChoice == 1) strcpy(bankName, "Bkash");
        else if (bankChoice == 2) strcpy(bankName, "Nagad");
        else if (bankChoice == 3) strcpy(bankName, "Rocket");
        else strcpy(bankName, "Upay");

        printf("Enter Mobile Number (or Account Number): ");
        char mobileNumber[20];
        scanf("%s", mobileNumber);

        printf("Enter Transaction ID: ");
        char transactionId[20];
        scanf("%s", transactionId);

        printf("\nMobile Banking Payment Successful!\nAmount Paid: %.2f Tk\n", amount);
    } else {
        printf("Invalid Payment Method.\n");
    }
}

void displayTicket(Ticket ticket) {
    FILE *file = fopen("ticket_receipt.txt", "a");  // Open file in append mode
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }

    printf("\nYour Ticket Details:\n");
    printf("Theatre: %s\nMovie: %s\nDuration: %s\nHall: %s\nTime: %s\nSeat Type: %s\nTickets: %d\nTotal Amount: %.2f Tk\n",
        ticket.theatre, ticket.movie, ticket.duration, ticket.hall, ticket.time, ticket.seatType, ticket.ticketQty, ticket.totalAmount);

    fprintf(file, "-----------------------------------------\n");
    fprintf(file, "Theatre: %s\nMovie: %s\nDuration: %s\nHall: %s\nTime: %s\nSeat Type: %s\nTickets: %d\nTotal Amount: %.2f Tk\n",
        ticket.theatre, ticket.movie, ticket.duration, ticket.hall, ticket.time, ticket.seatType, ticket.ticketQty, ticket.totalAmount);
    
    fprintf(file, "Seats: ");
    for (int i = 0; i < ticket.ticketQty; i++) {
        fprintf(file, "%d ", ticket.seatNumbers[i]);
    }
    fprintf(file, "\n-----------------------------------------\n");

    fclose(file);  // Close the file
    printf("\nReceipt saved to 'ticket_receipt.txt'.\n");
}
